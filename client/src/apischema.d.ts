/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/events': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get list of events */
    get: operations['getEvents']
    put?: never
    /** Create a new event */
    post: operations['createEvent']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/events/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Event details by ID */
    get: operations['getEventById']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** @description A list of events */
    EventsList: {
      /** @description Each Event object */
      items: components['schemas']['Event'][]
    }
    Event: {
      title: string
      /** @description Event identifier */
      id: string | number
      location?: string | null
      dates: {
        /**
                 * Format: int64
                 * @description Timestamp in milliseconds
                 */
        timestamp: number
        records: {
          name: string
          /** @enum {string} */
          answer: 'yes' | 'no' | 'if-needed'
        }[]
      }[]
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getEvents: {
    parameters: {
      query?: {
        /** @description List of events to return */
        limit?: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description A list of events */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['EventsList']
        }
      }
    }
  }
  createEvent: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['Event'] & {
          id?: unknown
        }
      }
    }
    responses: {
      /** @description Event created successfully */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Event']
        }
      }
    }
  }
  getEventById: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Event details */
        id: string | number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Event details */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Event']
        }
      }
      /** @description Not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            message: string
          }
        }
      }
    }
  }
}
